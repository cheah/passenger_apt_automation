#!/bin/bash
set -e

SELFDIR=`dirname "$0"`
SELFDIR=`cd "$SELFDIR" && pwd`
source "$SELFDIR/internal/lib/library.sh"

CONFIG_DIR=
PACKAGE_DIR=
OUTPUT_DIR=
SIGNING_KEY=
PASSWORD_FILE=

function usage()
{
	echo "create-repo [OPTIONS]"
	echo "Create an APT repository for a bunch of package files."
	echo
	echo "Required options:"
	echo "  -c DIR       Path to an APT repository configuration directory"
	echo "  -p DIR       Path to directory containing built packages"
	echo "  -o DIR       Path in which the APT repository is to be created"
	echo
	echo "Optional options:"
	echo "  -s KEY       GPG key to use for signing the repository"
	echo "  -r           Append Passenger major version"
	echo
	echo "  -h           Show usage"
}

function parse_options()
{
	local OPTIND=1
	local opt
	while getopts "c:p:o:s:a:h" opt; do
		case "$opt" in
		c)
			CONFIG_DIR="$OPTARG"
			;;
		p)
			PACKAGE_DIR="$OPTARG"
			;;
		o)
			OUTPUT_DIR="$OPTARG"
			;;
		s)
			SIGNING_KEY="$OPTARG"
			;;
		a)
			PASSWORD_FILE="$OPTARG"
			;;
		h)
			usage
			exit
			;;
		*)
			return 1
			;;
		esac
	done

	(( OPTIND -= 1 )) || true
	shift $OPTIND || true

	if [[ "$PACKAGE_DIR" = "" ]]; then
		echo "ERROR: please specify a package directory with -p."
		exit 1
	fi
	if [[ "$OUTPUT_DIR" = "" ]]; then
		echo "ERROR: please specify an output directory with -w."
		exit 1
	fi
	if [[ "$SIGNING_KEY" != "" && "$PASSWORD_FILE" = "" ]]; then
		echo "ERROR: if you want to sign the repository, please specify a password file with -a."
		exit 1
	fi
}

parse_options "$@"
PACKAGE_DIR="`absolute_path \"$PACKAGE_DIR\"`"
OUTPUT_DIR="`absolute_path \"$OUTPUT_DIR\"`"


header "Creating repository"
run mkdir -p "$OUTPUT_DIR/conf"
run cp "$CONFIG_DIR"/* "$OUTPUT_DIR/conf/"
run docker run \
	--rm \
	-v "$SELFDIR/internal:/system/internal:ro" \
	-v "$PACKAGE_DIR:/package:ro" \
	-v "$OUTPUT_DIR:/output" \
	-e "APP_UID=`/usr/bin/id -u`" \
	-e "APP_GID=`/usr/bin/id -g`" \
	phusion/passenger_apt_automation \
		/sbin/my_init --quiet --skip-runit --skip-startup-files -- \
		/system/internal/scripts/inituidgid.sh \
		/sbin/setuser app \
		/system/internal/scripts/includeintorepo.rb

if [[ "$SIGNING_KEY" != "" ]]; then
	header "Signing repository"
	PASSWORD_FILE="`absolute_path \"$PASSWORD_FILE\"`"
	run mkdir -p ~/.gpg
	run docker run \
		--rm \
		-v "$SELFDIR/internal:/system/internal:ro" \
		-v "$OUTPUT_DIR:/output" \
		-v "$PASSWORD_FILE:/gpg_password:ro" \
		-v ~/.gpg:/gpg_home:ro \
		-e "SIGNING_KEY=$SIGNING_KEY" \
		-e "APP_UID=`/usr/bin/id -u`" \
		-e "APP_GID=`/usr/bin/id -g`" \
		phusion/passenger_apt_automation \
		/sbin/my_init --quiet --skip-runit --skip-startup-files -- \
		/system/internal/scripts/inituidgid.sh \
		/sbin/setuser app \
		/system/internal/scripts/signrepo.sh
fi
