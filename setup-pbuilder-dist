#!/bin/bash
# Installs or updates environments for all the target distributions.

set -e

function usage()
{
	echo "./setup-pbuilder-dist [OPTIONS]"
	echo "Installs or updates environments for all the target distributions."
	echo
	echo "Optional options:"
	echo "  -u                 Update instead of creating environments"
	echo "  -h                 Show usage"
}


update=false

while getopts "uh" opt; do
	case "$opt" in
	u)
		update=true
		;;
	h)
		usage
		exit
		;;
	esac
done

if [[ `whoami` != psg_apt_automation ]]; then
	echo "This command must be run as psg_apt_automation. Please try:"
	echo "sudo -u psg_apt_automation -H ./setup-pbuilder-dist"
	exit 1
fi


source lib/bashlib
load_general_config
require_running_as_psg_apt_automation_user

# Prevent pbuilder-dist from complaining about sudo.
unset SUDO_COMMAND
unset SUDO_USER
unset SUDO_UID
unset SUDO_GID

for DIST in $DEBIAN_DISTROS; do
	for ARCH in $DEBIAN_ARCHS; do
		if [[ $ARCH == amd64 ]]; then
			base_tgz="$DIST-base.tgz"
		else
			base_tgz="$DIST-$ARCH-base.tgz"
		fi
		if $update; then
			if [[ -e ~/pbuilder/$base_tgz ]]; then
				echo "# Updating $DIST $ARCH"
				pbuilder-dist $DIST $ARCH update
			else
				echo "# $DIST $ARCH does not exist. Run ./setup-pbuilder-dist (without -u) to create it."
			fi
		else
			if [[ -e ~/pbuilder/$base_tgz ]]; then
				echo "# $DIST $ARCH already exists"
			else
				echo "# Creating $DIST $ARCH"
				pbuilder-dist $DIST $ARCH create
				pbuilder-dist $DIST $ARCH update
			fi
		fi
	done
done
